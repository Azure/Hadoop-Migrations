{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.3.255.40792",
      "templateHash": "8448041492227030101"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for your data factory"
      }
    },
    "dataFactoryName": {
      "type": "string",
      "defaultValue": "hdmp001adf001",
      "metadata": {
        "description": "Name of the instance"
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "hdmp001kv001",
      "metadata": {
        "description": "Specifies the resource id of the key vault to store the storage access key."
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "vnetBlue",
      "metadata": {
        "description": "Specifies the name of the VNet which the private endpoint uses."
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "subnet1",
      "metadata": {
        "description": "Specifies the name of the subnet which the private endpoint uses."
      }
    },
    "privateDnsZoneNameDataFactory": {
      "type": "string",
      "defaultValue": "hdmp001-pdns.com",
      "metadata": {
        "description": "Specifies the name of the private dns zone, Data Factory"
      }
    },
    "privateDnsZoneNamePortal": {
      "type": "string",
      "defaultValue": "hdmp001-pdns.com",
      "metadata": {
        "description": "Specifies the name of the private dns zone, Portal"
      }
    }
  },
  "functions": [],
  "variables": {
    "keyVaultId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
    "subnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]",
    "privateDnsZoneIdDataFactory": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneNameDataFactory'))]",
    "privateDnsZoneIdPortal": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneNamePortal'))]",
    "defaultManagedVnetIntegrationRuntimeName": "AutoResolveIntegrationRuntime",
    "dataFactoryName_var": "[parameters('dataFactoryName')]",
    "keyVaultId_var": "[variables('keyVaultId')]",
    "subnetId_var": "[variables('subnetId')]",
    "privateDnsZoneIdDataFactory_var": "[variables('privateDnsZoneIdDataFactory')]",
    "privateDnsZoneIdPortal_var": "[variables('privateDnsZoneIdPortal')]",
    "privateEndpointNameDataFactory_var": "[format('{0}-datafactory-pe', variables('dataFactoryName_var'))]",
    "privateEndpointNamePortal_var": "[format('{0}-portal-pe', variables('dataFactoryName_var'))]"
  },
  "resources": [
    {
      "type": "Microsoft.DataFactory/factories",
      "apiVersion": "2018-06-01",
      "name": "[parameters('dataFactoryName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "globalParameters": {},
        "publicNetworkAccess": "Disabled"
      }
    },
    {
      "type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
      "apiVersion": "2018-06-01",
      "name": "[format('{0}/default', parameters('dataFactoryName'))]",
      "properties": {},
      "dependsOn": [
        "[resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName'))]"
      ]
    },
    {
      "type": "Microsoft.DataFactory/factories/integrationRuntimes",
      "apiVersion": "2018-06-01",
      "name": "[format('{0}/{1}', parameters('dataFactoryName'), variables('defaultManagedVnetIntegrationRuntimeName'))]",
      "properties": {
        "type": "Managed",
        "managedVirtualNetwork": {
          "type": "ManagedVirtualNetworkReference",
          "referenceName": "default"
        },
        "typeProperties": {
          "computeProperties": {
            "location": "AutoResolve"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks', split(format('{0}/default', parameters('dataFactoryName')), '/')[0], split(format('{0}/default', parameters('dataFactoryName')), '/')[1])]",
        "[resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName'))]"
      ]
    },
    {
      "condition": "[not(empty(variables('keyVaultId_var')))]",
      "type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
      "apiVersion": "2018-06-01",
      "name": "[format('{0}/{1}', format('{0}/default', parameters('dataFactoryName')), replace(parameters('keyVaultName'), '-', ''))]",
      "properties": {
        "privateLinkResourceId": "[variables('keyVaultId_var')]",
        "groupId": "vault"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks', split(format('{0}/default', parameters('dataFactoryName')), '/')[0], split(format('{0}/default', parameters('dataFactoryName')), '/')[1])]",
        "[resourceId('Microsoft.DataFactory/factories/integrationRuntimes', split(format('{0}/{1}', parameters('dataFactoryName'), variables('defaultManagedVnetIntegrationRuntimeName')), '/')[0], split(format('{0}/{1}', parameters('dataFactoryName'), variables('defaultManagedVnetIntegrationRuntimeName')), '/')[1])]",
        "[resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName'))]"
      ]
    },
    {
      "condition": "[not(empty(variables('keyVaultId_var')))]",
      "type": "Microsoft.DataFactory/factories/linkedservices",
      "apiVersion": "2018-06-01",
      "name": "[format('{0}/{1}', parameters('dataFactoryName'), replace(parameters('keyVaultName'), '-', ''))]",
      "properties": {
        "type": "AzureKeyVault",
        "annotations": [],
        "connectVia": {
          "type": "IntegrationRuntimeReference",
          "referenceName": "[variables('defaultManagedVnetIntegrationRuntimeName')]"
        },
        "description": "Key Vault for data product",
        "parameters": {},
        "typeProperties": {
          "baseUrl": "[format('https://{0}.vault.azure.net/', parameters('keyVaultName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks', split(format('{0}/default', parameters('dataFactoryName')), '/')[0], split(format('{0}/default', parameters('dataFactoryName')), '/')[1])]",
        "[resourceId('Microsoft.DataFactory/factories/integrationRuntimes', split(format('{0}/{1}', parameters('dataFactoryName'), variables('defaultManagedVnetIntegrationRuntimeName')), '/')[0], split(format('{0}/{1}', parameters('dataFactoryName'), variables('defaultManagedVnetIntegrationRuntimeName')), '/')[1])]",
        "[resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2020-05-01",
      "name": "[variables('privateEndpointNameDataFactory_var')]",
      "location": "[parameters('location')]",
      "properties": {
        "privateLinkServiceConnections": [
          {
            "name": "[variables('privateEndpointNameDataFactory_var')]",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName'))]",
              "groupIds": [
                "dataFactory"
              ]
            }
          }
        ],
        "manualPrivateLinkServiceConnections": [],
        "subnet": {
          "id": "[variables('subnetId_var')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "apiVersion": "2020-05-01",
      "name": "[format('{0}/aRecord', variables('privateEndpointNameDataFactory_var'))]",
      "properties": {
        "privateDnsZoneConfigs": [
          {
            "name": "[format('{0}-aRecord', variables('privateEndpointNameDataFactory_var'))]",
            "properties": {
              "privateDnsZoneId": "[variables('privateDnsZoneIdDataFactory_var')]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointNameDataFactory_var'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2020-05-01",
      "name": "[variables('privateEndpointNamePortal_var')]",
      "location": "[parameters('location')]",
      "properties": {
        "privateLinkServiceConnections": [
          {
            "name": "[variables('privateEndpointNamePortal_var')]",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName'))]",
              "groupIds": [
                "portal"
              ]
            }
          }
        ],
        "manualPrivateLinkServiceConnections": [],
        "subnet": {
          "id": "[variables('subnetId_var')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "apiVersion": "2020-05-01",
      "name": "[format('{0}/aRecord', variables('privateEndpointNamePortal_var'))]",
      "properties": {
        "privateDnsZoneConfigs": [
          {
            "name": "[format('{0}-aRecord', variables('privateEndpointNamePortal_var'))]",
            "properties": {
              "privateDnsZoneId": "[variables('privateDnsZoneIdPortal_var')]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointNamePortal_var'))]"
      ]
    }
  ]
}